@{
    Layout = Layout = "~/Views/Admin/_LayoutAdmin.cshtml";
    var themes = (List<SBS_Ecommerce.Models.Theme>)ViewBag.Themes;
    var cpID = SBS_Ecommerce.Framework.SBSCommon.Instance.GetCompany().Company_ID;
}

<!-- Modal -->
<div id="successModal" class="modal fade" role="dialog">
    <div class="modal-dialog" style="left: auto;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="alert alert-success">
                    <strong>Success!</strong> <span id="contentAlert">Front end website has changed theme.</span>
                </div>
            </div>
        </div>

    </div>
</div>

<div id="zoomModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg" style="left: auto;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <span class="theme-name">Default</span>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <img id="image-Zoom" src="~/Content/Theme/Theme1/img/thumbTheme.png" />
                <div id="themeDescript" style="padding-top:5px;"></div>
            </div>
        </div>

    </div>
</div>

<div id="errorModal" class="modal fade" role="dialog">
    <div class="modal-dialog" style="left: auto;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger">
                    <strong>Error!</strong> <span id="contentAlert">Theme duplicate</span>.
                </div>
            </div>
        </div>
    </div>
</div>

<div id="uploadModal" class="modal fade" role="dialog">
    <div class="modal-dialog" style="left: auto;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h2>Upload Theme</h2>
            </div>
            <div class="modal-body">
                <div>
                    <form id="uploader">
                        <input type="file" id="fileInput" accept=".zip" multiple>
                        <textarea id="txtDescription" style="width:100%;margin-top:10px;height:200px;"></textarea>
                        <div class="confirm-upload">
                            <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" style="margin-top:10px" />
                            <input class="btn btn-success btn-ok" value="Install" type="button" onclick="Upload()" style="margin-top:10px">
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="confirm-delete" data-id="" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="left:auto">
        <div class="modal-content">
            <div class="modal-header">
                Are you sure delete this theme?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button class="btn btn-danger btn-ok" onclick="DeleteTheme($('#confirm-delete').attr('data-id'))">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="main-content">
    <!--+general-chart("classes", "title", "height", "id", "counter value", "counter desc", tools enabled (use true or false))-->

    <div class="install-theme">
        <div onclick="$('#uploadModal').modal('show')" class="glyphicon glyphicon-upload"></div>
        <div>Upload Theme</div>
    </div>

    <table class="table table-condensed table-hover table-bordered table-striped" style="display:none">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Path</th>
                <th>Active</th>
                <th>Operator</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in themes)
            {
                <tr>
                    <td>
                        @item.ID
                    </td>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.Path
                    </td>
                    <td>
                        @item.Active
                    </td>
                    <td>
                        @if (!(bool)item.Active)
                        {
                            <input value="Active" type="button" class="btn btn-success" onclick="ChangeActive(@item.ID)" />
                        }
                        else
                        {
                            <input value="Active" disabled type="button" class="btn btn-alt4" onclick="ChangeActive(@item.ID)" />
                        }
                        @if (item.Name != "Default")
                        {
                            <input value="Delete" type="button" class="btn btn-danger" onclick="ConfirmDelete(@item.ID)" />
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>


    <div>
        @{
            int countRows = themes.Count / 4;
            int pois = 0;
        }
        @for (int i = 0; i <= countRows; i++)
        {
            <div class="row block-item-theme">
                @for (int j = 0; j < 3; j++)
                {
                    if (pois < themes.Count)
                    {
                        <div class="col-lg-4">
                            @if (!themes[pois].Active)
                            {
                                <img src="@( Url.Content("~/Content/Theme/") + cpID.ToString() +"/"+ themes[pois].Name + "/img/thumbTheme.png")" alt="Avatar" class="image-theme" style="width:100%">
                            }
                            else
                            {
                                <img src="@( Url.Content("~/Content/Theme/") + cpID.ToString() +"/" + themes[pois].Name + "/img/thumbTheme.png")" alt="Avatar" class="image-theme" style="width:100%;border:solid 3px #ec4444">
                            }
                            <div class="opera-theme">
                                @if (!themes[pois].Active)
                                {
                                    <i onclick="ChangeActive('@themes[pois].ID')" class="glyphicon glyphicon-ok-sign"></i>
                                }
                                else
                                {
                                    <i class="glyphicon glyphicon-ok-sign" style="opacity:0.4;cursor:not-allowed;"></i>
                                }

                                @if (themes[pois].Name != "Default")
                                {
                                    <i onclick="ConfirmDelete('@themes[pois].ID')" class="glyphicon glyphicon-remove-sign"></i>
                                }
                                else
                                {
                                    <i class="glyphicon glyphicon-remove-sign" style="opacity:0.4;cursor:not-allowed;"></i>
                                }
                                <i onclick="PresentTheme('@( Url.Content("~/Content/Theme/") + cpID.ToString() +"/"+ themes[pois].Name + "/img/thumbTheme.png")','@themes[pois].ID')" class="glyphicon glyphicon-eye-open"></i>

                            </div>
                            <div class="theme-name">@themes[pois].Name</div>
                        </div>

                        pois++;
                    }
                }
            </div>
        }
    </div>
</div>



<script type="text/javascript">

    $('#successModal').on('click', function () {

        window.location.reload();

    });
    $('.image-theme').on('click', function () {

        // $('#zoomModal').modal('show');
    });
    $(document).on('mouseover', '.image-theme', function () {
        $(this).parent().parent().parent().find('.opera-theme').hide();
        // alert($(this).css('border'));
        if ($(this).css('border') != '3px solid rgb(236, 68, 68)') {
            $(this).css('border', 'solid 1px red');
        }

        $(this).css('opacity', '0.3');
        $(this).parent().children('.opera-theme').show();

    });
    $(document).on('mouseleave', '.image-theme', function () {
        if ($(this).css('border') != '3px solid rgb(236, 68, 68)') {
            $(this).css('border', 'solid 1px gray');
        }
        $(this).css('opacity', '1');
        $(this).parent().children('.opera-theme').hide();
    });

    $(document).on('mouseover', '.opera-theme', function () {
        if ($(this).parent().children('.image-theme').css('border') != '3px solid rgb(236, 68, 68)') {
            $(this).parent().children('.image-theme').css('border', 'solid 1px red');
        }

        $(this).parent().children('.image-theme').css('opacity', '0.3');
        $(this).show();
    });

    $(document).on('mouseleave', '.opera-theme', function () {
        if ($(this).parent().children('.image-theme').css('border') != '3px solid rgb(236, 68, 68)') {
            $(this).parent().children('.image-theme').css('border', 'solid 1px gray');
        }

        $(this).parent().children('.image-theme').css('opacity', '1');
        $(this).hide();
    });

    function PresentTheme(src,id) {
        $('#zoomModal').find('#image-Zoom').attr('src', src);
        $.ajax({
            url: '@Url.Action("GetInforTheme","Admin")',
            data: {id:id},
            success: function (rs) {
                if (rs != null) {
                    var value = rs.replace(/\n/g, '<br/>');
                    $('#zoomModal').find('#themeDescript').html(value);
                }
                else {
                    $('#zoomModal').find('#themeDescript').html("");
                }
            }
        })
       
        $('#zoomModal').modal('show');
    }

</script>

<script>
    function ChangeActive(id) {
        $.ajax({
            url: '@Url.Action("ChangeActive", "Admin")',
            data: { id: id },
            success: function (rs) {
                // alert('Sucess');
                $('#contentAlert').html("Front end website has changed theme.");
                $('#successModal').modal('show');
                //  window.location.reload();
            }
        });
    }
    function ConfirmDelete(id) {

        $('#confirm-delete').attr('data-id', id);
        $('#confirm-delete').modal('show');

    }

    function DeleteTheme(id) {
        $('#confirm-delete').modal('hide');
        $.ajax({
            url: '@Url.Action("DeleteTheme", "Admin")',
            data: { id: id },
            success: function (rs) {
                $('#contentAlert').html("Deleted theme.");
                $('#successModal').modal('show');
                //window.location.reload();
            }
        });
    }

    function Upload() {
        $('#uploadModal').modal('hide');
        var formdata = new FormData(); //FormData object
        var fileInput = document.getElementById('fileInput');
        // alert(fileInput.files[0].name);
        //Iterating through each files selected in fileInput

        if (fileInput.files.length > 0) {
            if (fileInput.files[0].name.substr(fileInput.files[0].name.lastIndexOf('.')) == '.zip') {
                for (i = 0; i < fileInput.files.length; i++) {
                    //Appending each file to FormData object
                    formdata.append(fileInput.files[i].name, fileInput.files[i]);
                    formdata.append('Description', $('#txtDescription').val());
                }
             
                var xhr = new XMLHttpRequest();
                xhr.open('POST', '@Url.Action("Upload", "Admin")');
                xhr.send(formdata);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        //alert(xhr.responseText);
                        var rs = xhr.responseText.toString();
                        // window.location.reload();
                        if (rs == "true") {

                            $('#contentAlert').html("Theme successful upload");
                            $('#successModal').modal('show');
                        }
                        else {
                            $('#errorModal').find('#contentAlert').text('Theme duplicate');
                            $('#errorModal').modal('show');
                        }
                    }
                }
            }
            else {
                $('#errorModal').find('#contentAlert').text('Invalid Format');
                $('#errorModal').modal('show');
            }
        }
        else {
            $('#errorModal').find('#contentAlert').text('No file selected.');
            $('#errorModal').modal('show');
        }
        return false;
    }


</script>
