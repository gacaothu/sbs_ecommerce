@model SBS_Ecommerce.Models.DTOs.ConfigPaypalDTO
@{
    ViewBag.Title = "Shipping Fee";
    Layout = "~/Views/Admin/_LayoutAdmin.cshtml";
}


<div class="col-md-8 col-md-offset-2">
    <div class="panel panel-default">
        @if (ViewBag.Message != null)
        {
            <div class="alert alert-success">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                @ViewBag.Message
                <br>
            </div>
        }
       
        <div class="panel-heading">Configuration Paypal</div>
        <div class="panel-body">
           @using (Html.BeginForm())
           {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.LabelFor(model => model.Mode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        <span class="male">
                            @Html.RadioButton("Mode", "sanbox", (Model.Mode == "sanbox"), new { id = "Mode-sanbox" })
                            <label class="forcheckbox" for="Mode-sanbox">Sanbox</label>
                        </span>
                        <span class="female">
                            @Html.RadioButton("Mode", "live", (Model.Mode == "live"), new { id = "Mode-live" })
                            <label class="forcheckbox" for="Mode-live">Live</label>
                        </span>
                        <br />
                        @Html.ValidationMessageFor(model => model.Mode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConnectionTimeout, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.ConnectionTimeout, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConnectionTimeout, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClientId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ClientId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClientSecret, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ClientSecret, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClientSecret, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-3">
                        <input type="submit" value="Save" class="btn btn-space btn-primary" />
                    </div>
                </div>
            </div>
           }
        </div>
    </div>
</div>


