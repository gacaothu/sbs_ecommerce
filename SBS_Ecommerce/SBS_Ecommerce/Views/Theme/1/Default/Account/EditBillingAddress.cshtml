@model AddressDTO
@using SBS_Ecommerce.Models.DTOs;
@using SBS_Ecommerce.Framework.Utilities;
@{
    var pathTheme = BaseUtil.Instance.GetPathTheme();
    Layout = pathTheme + "/Account/_MyProfile.cshtml";
}


<div class="panel panel-default form-panel">
    <div class="panel-heading">
        <h3>My account - Edit billing invoice addresses</h3>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model=>model.AddressType)
                <div class="form-group">
                    @Html.LabelFor(model => model.ReceiverFirstName, htmlAttributes: new { @class = "control-label col-md-3" }) <span style="color:red">*</span>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ReceiverFirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReceiverFirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReceiverLastName, htmlAttributes: new { @class = "control-label col-md-3" })<span style="color:red">*</span>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ReceiverLastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReceiverLastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })<span style="color:red">*</span>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Ward, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Ward, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ward, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-3" })<span style="color:red">*</span>
                    <div class="col-md-6">
                        @Html.DropDownList("Country", null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-3" })<span style="color:red">*</span>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3" })<span style="color:red">*</span>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReceiveAtWeekend, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        <span class="male">
                            @Html.RadioButton("ReceiveAtWeekend", "1", (Model.ReceiveAtWeekend == "1"), new { id = "ReceiveAtWeekend-1" })
                            <label class="forcheckbox" for="ReceiveAtWeekend-1">Yes</label>
                        </span>
                        <span class="female">
                            @Html.RadioButton("ReceiveAtWeekend", "0", (Model.ReceiveAtWeekend == "0"), new { id = "ReceiveAtWeekend-0" })
                            <label class="forcheckbox" for="ReceiveAtWeekend-0">No</label>
                        </span>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-6">
                        <input type="submit" value="Update" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

