@using SBS_Ecommerce.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    var pathName = SBS_Ecommerce.Framework.Utilities.BaseUtil.Instance.GetPathTheme();
    Layout = pathName + "/_Layout.cshtml";
}
<div class="main-wrap static-page">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-heading">
                    <h4 class="page-title">Customer</h4>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <ul class="cart-steps">
                    <li class="cart-step summery complete">01. Summary</li>
                    <li class="cart-step account current">02. Sign in</li>
                    <li class="cart-step address">03. Address</li>
                    <li class="cart-step payment">04. Payment</li>
                </ul>
            </div>
        </div>
        <div class="row">
            <div class="display-flex" id="register-form" style="margin-bottom: 15px">
                <div class="col-md-6 col-sm-12">
                    @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "account-form", role = "form", @id = "registerForm" }))
                    {
                        <div class="form-horizontal">
                            @Html.AntiForgeryToken()
                            <h4 class="form-title">Create an account</h4>
                            @Html.ValidationSummary("", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-xs-2" })
                                <div class="col-xs-4">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-xs-2" })
                                <div class="col-xs-4">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group gender">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-xs-2" })
                                <div class="col-xs-10">
                                    <span class="male col-xs-4">
                                        @Html.RadioButton("Gender", "M", (Model.Gender == "M"), new { id = "gender-male" })
                                        <label class="forcheckbox" for="gender-male">Male</label>
                                    </span>
                                    <span class="female col-xs-4">
                                        @Html.RadioButton("Gender", "F", (Model.Gender == "F"), new { id = "gender-female" })
                                        <label class="forcheckbox" for="gender-female">Female</label>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group register-form">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-xs-2" })
                                <div class="col-xs-10">
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-xs-2" })
                                <div class="col-xs-3">
                                    @Html.DropDownList("month", Enumerable.Range(1, 12).Select(i => new SelectListItem { Value = i.ToString(), Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i) }), "-- Month --", new { @class = "form-control" })
                                </div>
                                <div class="col-xs-3">
                                    @Html.DropDownList("date", Enumerable.Range(1, 31).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "--  Day --", new { @class = "form-control" })
                                </div>
                                <div class="col-xs-3">
                                    @Html.DropDownList("year", Enumerable.Range(1900, 109).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "-- Year --", new { @class = "form-control" })
                                </div>
                            </div>

                            <hr />
                            <div class="form-group register-form">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-xs-2" })
                                <div class="col-xs-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group register-form">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-xs-2" })
                                <div class="col-xs-10">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group register-form">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-xs-2" })
                                <div class="col-xs-10">
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group register-form">
                                @Html.LabelFor(model => model.MemberNo, htmlAttributes: new { @class = "control-label col-xs-2" })
                                <div class="col-xs-10">
                                    @Html.EditorFor(model => model.MemberNo, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <br />
                            <button type="submit" name="signup" class="btn btn-default"><i class="fa fa-user" aria-hidden="true"></i> Create an account</button>
                        </div>
                    }
                </div>
                <div class="col-md-6 col-sm-12">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "basicfields account-form", role = "form", @id = "loginForm" }))
                    {
                        @Html.AntiForgeryToken()
                        <h4 class="form-title">Already Registered?</h4>
                        <div class="validation-summary-errors text-danger" data-valmsg-summary="true">
                            @ViewBag.Message
                        </div>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger", @placeholder = "Email address" })
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger", @placeholder = "Password" })
                        <p> <a href="#" class="resetlink">Forgot your password?</a></p>
                        <button type="submit" class="btn btn-default"><i class="fa fa-lock" aria-hidden="true"></i> Sign in</button>
                        <a href="@Url.Content("~/Account/ExternalLogin?provider=Facebook")" class="btn btn-social btn-facebook"> <i class="fa fa-facebook"> </i> Sign in with Facebook </a>
                    }

                </div>
            </div>
        </div>
    </div>
</div>