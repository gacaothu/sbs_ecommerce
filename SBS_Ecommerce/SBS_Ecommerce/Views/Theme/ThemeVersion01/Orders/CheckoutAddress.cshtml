@model IEnumerable<SBS_Ecommerce.Models.UserAddress>
@using SBS_Ecommerce.Models.Base;
@using SBS_Ecommerce.Models.Extension;
@using SBS_Ecommerce.Framework.Utilities;
@{
    var pathName = BaseUtil.Instance.GetPathTheme();
    Layout = pathName + "/_Layout.cshtml";
    Cart cart = (Cart)Session["Cart"];
}

<!--------------- Main wrap --------------->
<div class="main-wrap static-page">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-heading">
                    <h4 class="page-title">Shopping-cart Summary</h4>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <ul class="cart-steps">
                    <li class="cart-step summery complete">01. Summary</li>
                    <li class="cart-step account complete">02. Sign in</li>
                    <li class="cart-step payment complete">03. Shipping</li>
                    <li class="cart-step address current">04. Address</li>
                    <li class="cart-step payment">05. Payment</li>
                </ul>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @if (TempData["Message"] != null)
                {
                    <div class="alert alert-success alert-dismissable">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
                        <strong>Success!</strong> @TempData["Message"]
                    </div>
                }
                <div class="form-horizontal address-shipping checkout-page">
                    <h4>Shipping Address </h4>
                    <div>
                        <input type="checkbox" class="ckbillingaddress" id="ckbillingaddress" name="billingAddress" onclick="checkBillingAddress()" value="1" />
                        <label for="ckbillingaddress">Use billing address</label>
                    </div>
                    <div class="panel-body address-list-page">
                        <div class="address-list">
                            @{ var billingAddress = 0;
                                if (Model.Where(u => u.AddressType == ((int)AddressType.BillingAddress).ToString()).Any())
                                {
                                    billingAddress = (Model.Where(u => u.AddressType == ((int)AddressType.BillingAddress).ToString())).FirstOrDefault().Id;
                                }
                            }
                            @foreach (var item in Model.Where(u => u.AddressType == ((int)AddressType.ShippingAddress).ToString()).ToList())
                            {
                                <div class="section address-item">
                                    <div id="legend">
                                        <div class="buttons pull-right">
                                            <input type="button" class="button-2 delete-address-button btn btn-default" onclick="SelectCustomerAddress('@item.Id','@billingAddress')" value="Choose">
                                        </div>
                                    </div>
                                    <ul class="info">
                                        <li class="name">
                                            Name: <strong>@item.ReceiverFirstName @item.ReceiverLastName</strong>
                                        </li>

                                        <li class="phone">
                                            Phone number: @item.Phone
                                        </li>

                                        <li class="address">
                                            Address: @item.Address
                                        </li>
                                        <li class="city-state-zip">
                                            City: @item.City , @item.State, @item.ZipCode
                                        </li>
                                        <li class="country">
                                            Country: @item.Country
                                        </li>
                                    </ul>

                                </div>
                            }
                            @if (Model.Where(u => u.AddressType == ((int)AddressType.ShippingAddress).ToString()).Count() > 0)
                            {
                                <div class="add-address btn-add-address">
                                    <strong onclick="AddNewShippingAddrress()"><i class="fa fa-plus-circle" aria-hidden="true"></i> Add more address shipping</strong>
                                </div>
                            }

                            <div class="@(Model.Where(u => u.AddressType == ((int)AddressType.ShippingAddress).ToString()).Count()>0? "add-more-shipping":"")">
                                @Html.Action("AddShippingAddressCheckOut", "Account")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-horizontal address-billing checkout-page">
                    <h4>Billing Address</h4>
                    <div class="panel-body address-list-page">
                        <div class="address-list">
                            @if (Model.Where(u => u.AddressType == ((int)AddressType.BillingAddress).ToString()).Any())
                            {
                                foreach (var item in Model.Where(u => u.AddressType == ((int)AddressType.BillingAddress).ToString()).ToList())
                                {
                                    <div class="section address-item">
                                        <ul class="info">
                                            <li class="name">
                                                Name: <strong>@item.ReceiverFirstName @item.ReceiverLastName</strong>
                                            </li>

                                            <li class="phone">
                                                Phone number: @item.Phone
                                            </li>

                                            <li class="address">
                                                Address: @item.Address
                                            </li>
                                            <li class="city-state-zip">
                                                City: @item.City , @item.State, @item.ZipCode
                                            </li>
                                            <li class="country">
                                                Country: @item.Country
                                            </li>
                                        </ul>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="@(Model.Where(u=>u.AddressType==((int)AddressType.BillingAddress).ToString()).Count()>0? "add-more-shipping":"")">
                                    @Html.Action("AddBillingAddressCheckOut", "Account")
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    if ('@Model.Count()' == '0') {
        $('.btn-cancel-address').css("display", "none");
    }
    if (@TempData["Message"]!=null) {
        $("#ckbillingaddress").prop('checked', false);
    }
</script>
