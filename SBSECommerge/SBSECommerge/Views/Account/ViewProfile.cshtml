@model SBSECommerge.Models.User
@{
    ViewBag.Title = "ViewProfile";

}

<style>
    * {
        box-sizing: border-box;
    }

    body {
        font-family: "Lato", sans-serif;
    }

    /* Style the tab */
    div.tab {
        float: left;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
        width: 30%;
    }

        /* Style the buttons inside the tab */
        div.tab button {
            display: block;
            background-color: inherit;
            color: black;
            padding: 22px 16px;
            width: 100%;
            border: none;
            outline: none;
            text-align: left;
            cursor: pointer;
            transition: 0.3s;
            font-size: 17px;
        }

            /* Change background color of buttons on hover */
            div.tab button:hover {
                background-color: #ddd;
            }

            /* Create an active/current "tab button" class */
            div.tab button.active {
                background-color: #ccc;
            }

    /* Style the tab content */
    .tabcontent {
        float: left;
        padding: 0px 12px;
        border: 1px solid #ccc;
        width: 69%;
        border-left: none;
        margin-left: 1%;
        border-left: 1px solid #ccc;
    }

    .box_header {
        border-bottom: 1px solid #d2d2d2;
        padding: 14px 20px;
    }

    .box_body label {
        color: #999999;
        font-weight: 400;
        font-size: 13px;
        margin-bottom: 5px;
    }

    .box_body .box_item {
        margin-bottom: 5px;
    }

    .box_gender {
        display: inline-block;
    }
</style>

<div style="margin:0 auto;">
    <h2>Profile</h2>
    <div id="left_info">
        <div id="general">
            <img src="~/Content/img/avatar.png" style="width: 50px; height: 50px;" />
            <p>@Model.FirstName</p>
        </div>
        <div class="tab">
            <button class="tablinks" onclick="openContent(event, 'general_info')" id="defaultOpen">General</button>
            <button class="tablinks" onclick="openContent(event, 'shipping')">Shipping Address</button>
            <button class="tablinks" onclick="openContent(event, 'order')">Order</button>
            <button class="tablinks" onclick="openContent(event, 'payment')">Payment Information</button>
            <button class="tablinks" onclick="openContent(event, 'cpass')">Change Password</button>
            <button class="tablinks" onclick="javascript:void(0)">Log out</button>
        </div>
    </div>
    <div id="right_info">
        <div class="box_body">
            <div id="general_info" class="tabcontent">
                <div class="box_header">General Information</div>
                <hr />
                @using (Html.BeginForm("UpdateProfile", "Account", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                   
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
                        <div class="box_gender col-md-10">
                            @{ var genders = new string[] { "Male", "Female", "Other" };
                                foreach (var gender in genders)
                                {
                                    @Html.RadioButtonFor(m => m.Gender, gender, Model.Gender == gender ? true : false)
                                    <label for="@gender">@gender</label>
                                }
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Update" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>

            <div id="shipping" class="tabcontent">
                <div class="box_header">Shipping Information</div>
                <hr />
                <div>
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, new { disabled = "disabled" })
                </div>
                <div>
                    @Html.LabelFor(m => m.FirstName)
                    @Html.TextBoxFor(m => m.FirstName, new { disabled = "disabled" })
                </div>
                <div>
                    @Html.LabelFor(m => m.LastName)
                    @Html.TextBoxFor(m => m.LastName, new { disabled = "disabled" })
                </div>
                <div>
                    @Html.LabelFor(m => m.Phone)
                    @Html.TextBoxFor(m => m.Phone, new { disabled = "disabled" })
                </div>
            </div>

            <div id="order" class="tabcontent">
                <div class="box_header">Order Information</div>
                <hr />
            </div>

            <div id="payment" class="tabcontent">
                <div class="box_header">Payment Information</div>
                <hr />
            </div>

            <div id="cpass" class="tabcontent">
                <div class="box_header">Change Password</div>
                <hr />
            </div>
        </div>
    </div>
</div>

<script>
    function openContent(evt, cityName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }

    // Get the element with id="defaultOpen" and click on it
    document.getElementById("defaultOpen").click();
</script>